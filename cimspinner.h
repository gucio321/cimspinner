//This file is automatically generated by generator.lua from https://github.com/cimgui/imnodes
//based on imnodes.h file version XXX from https://github.com/Nelarius/imnodes
#ifndef CIMSPINNER_INCLUDED
#define CIMSPINNER_INCLUDED

#include "cimgui.h"

#ifdef CIMGUI_DEFINE_ENUMS_AND_STRUCTS

typedef float* float_ptr;


    static const ImColor white{1.f, 1.f, 1.f, 1.f};
    static const ImColor half_white{1.f, 1.f, 1.f, 0.5f};
    static const ImColor red{1.f,0.f,0.f,1.f};
typedef enum {
      e_st_rainbow = 0,
      e_st_angle,
      e_st_dots,
      e_st_ang,
      e_st_vdots,
      e_st_bounce_ball,
      e_st_eclipse,
      e_st_ingyang,
      e_st_barchartsine,
      e_st_count
    }SpinnerTypeT;
    using float_ptr = float *;
    static const float PI_DIV_4 = 3.14159265358979323846f / 4.f;
    static const float PI_DIV_2 = 3.14159265358979323846f / 2.f;
    static const float PI_2 = 3.14159265358979323846f * 2.f;
typedef struct SpinnerType SpinnerType;
struct SpinnerType
{ SpinnerTypeT value;
};
typedef struct Radius Radius;
struct Radius
{ float value;
};
typedef struct Speed Speed;
struct Speed
{ float value;
};
typedef struct Thickness Thickness;
struct Thickness
{ float value;
};
typedef struct Color Color;
struct Color
{ ImColor value;
};
typedef struct BgColor BgColor;
struct BgColor
{ ImColor value;
};
typedef struct AltColor AltColor;
struct AltColor
{ ImColor value;
};
typedef struct Angle Angle;
struct Angle
{ float value;
};
typedef struct AngleMin AngleMin;
struct AngleMin
{ float value;
};
typedef struct AngleMax AngleMax;
struct AngleMax
{ float value;
};
typedef struct FloatPtr FloatPtr;
struct FloatPtr
{ float_ptr value;
};
typedef struct Dots Dots;
struct Dots
{ int value;
};
typedef struct MiddleDots MiddleDots;
struct MiddleDots
{ int value;
};
typedef struct MinThickness MinThickness;
struct MinThickness
{ float value;
};
typedef struct Reverse Reverse;
struct Reverse
{ bool value;
};
typedef struct Delta Delta;
struct Delta
{ float value;
};
typedef struct Mode Mode;
struct Mode
{ int value;
};
typedef struct SpinnerConfig SpinnerConfig;
struct SpinnerConfig
{
        SpinnerTypeT m_SpinnerType;
        float m_Radius;
        float m_Speed;
        float m_Thickness;
        ImColor m_Color;
        ImColor m_BgColor;
        ImColor m_AltColor;
        float m_Angle;
        float m_AngleMin;
        float m_AngleMax;
        float_ptr m_FloatPtr;
        int m_Dots;
        int m_MiddleDots;
        float m_MinThickness;
        bool m_Reverse;
        float m_Delta;
        int m_Mode;
};
typedef enum {
        e_ease_none = 0,
        e_ease_inoutquad = 1,
        e_ease_inoutexpo = 2,
        e_ease_spring = 3,
        e_ease_gravity = 4,
        e_ease_infinity = 5,
        e_ease_elastic = 6,
        e_ease_sine = 7,
    }ease_mode;
    using LeafColor = ImColor (int);
      static struct SpinnerDraw { SpinnerTypeT type; } spinner_draw_funcs[e_st_count] = {
        { e_st_rainbow, [] (const char *label, const detail::SpinnerConfig &c) { SpinnerRainbow(label, c.m_Radius, c.m_Thickness, c.m_Color, c.m_Speed, c.m_AngleMin, c.m_AngleMax, c.m_Dots, c.m_Mode); } },
        { e_st_angle, [] (const char *label, const detail::SpinnerConfig &c) { SpinnerAng(label, c.m_Radius, c.m_Thickness, c.m_Color, c.m_BgColor, c.m_Speed, c.m_Angle, c.m_Mode); } },
        { e_st_dots, [] (const char *label, const detail::SpinnerConfig &c) { SpinnerDots(label, c.m_FloatPtr, c.m_Radius, c.m_Thickness, c.m_Color, c.m_Speed, c.m_Dots, c.m_MinThickness, c.m_Mode); } },
        { e_st_ang, [] (const char *label, const detail::SpinnerConfig &c) { SpinnerAng(label, c.m_Radius, c.m_Thickness, c.m_Color, c.m_BgColor, c.m_Speed, c.m_Angle, c.m_Mode); } },
        { e_st_vdots, [] (const char *label, const detail::SpinnerConfig &c) { SpinnerVDots(label, c.m_Radius, c.m_Thickness, c.m_Color, c.m_BgColor, c.m_Speed, c.m_Dots, c.m_MiddleDots, c.m_Mode); } },
        { e_st_bounce_ball, [] (const char *label,const detail::SpinnerConfig &c) { SpinnerBounceBall(label, c.m_Radius, c.m_Thickness, c.m_Color, c.m_Speed, c.m_Dots); } },
        { e_st_eclipse, [] (const char *label, const detail::SpinnerConfig &c) { SpinnerAngEclipse(label , c.m_Radius, c.m_Thickness, c.m_Color, c.m_Speed); } },
        { e_st_ingyang, [] (const char *label, const detail::SpinnerConfig &c) { SpinnerIngYang(label, c.m_Radius, c.m_Thickness, c.m_Reverse, c.m_Delta, c.m_AltColor, c.m_Color, c.m_Speed, c.m_Angle); } },
        { e_st_barchartsine, [] (const char *label, const detail::SpinnerConfig &c) { SpinnerBarChartSine(label, c.m_Radius, c.m_Thickness, c.m_Color, c.m_Speed, c.m_Dots, c.m_Mode); } }
      };
#else
#endif // CIMGUI_DEFINE_ENUMS_AND_STRUCTS

#ifndef CIMGUI_DEFINE_ENUMS_AND_STRUCTS
typedef ImSpinner::AltColor AltColor;
typedef ImSpinner::Angle Angle;
typedef ImSpinner::AngleMax AngleMax;
typedef ImSpinner::AngleMin AngleMin;
typedef ImSpinner::BgColor BgColor;
typedef ImSpinner::Color Color;
typedef ImSpinner::Delta Delta;
typedef ImSpinner::Dots Dots;
typedef ImSpinner::FloatPtr FloatPtr;
typedef ImSpinner::MiddleDots MiddleDots;
typedef ImSpinner::MinThickness MinThickness;
typedef ImSpinner::Mode Mode;
typedef ImSpinner::Radius Radius;
typedef ImSpinner::Reverse Reverse;
typedef ImSpinner::Speed Speed;
typedef ImSpinner::detail::SpinnerConfig SpinnerConfig;
typedef ImSpinner::SpinnerType SpinnerType;
typedef ImSpinner::Thickness Thickness;
typedef ImSpinner::SpinnerTypeT SpinnerTypeT;
typedef ImSpinner::ease_mode ease_mode;
#endif //CIMGUI_DEFINE_ENUMS_AND_STRUCTS
CIMGUI_API SpinnerType* SpinnerType_SpinnerType(const SpinnerTypeT v);
CIMGUI_API void SpinnerType_destroy(SpinnerType* self);
CIMGUI_API Radius* Radius_Radius(const float v);
CIMGUI_API void Radius_destroy(Radius* self);
CIMGUI_API Speed* Speed_Speed(const float v);
CIMGUI_API void Speed_destroy(Speed* self);
CIMGUI_API Thickness* Thickness_Thickness(const float v);
CIMGUI_API void Thickness_destroy(Thickness* self);
CIMGUI_API Color* Color_Color(const ImColor v);
CIMGUI_API void Color_destroy(Color* self);
CIMGUI_API BgColor* BgColor_BgColor(const ImColor v);
CIMGUI_API void BgColor_destroy(BgColor* self);
CIMGUI_API AltColor* AltColor_AltColor(const ImColor v);
CIMGUI_API void AltColor_destroy(AltColor* self);
CIMGUI_API Angle* Angle_Angle(const float v);
CIMGUI_API void Angle_destroy(Angle* self);
CIMGUI_API AngleMin* AngleMin_AngleMin(const float v);
CIMGUI_API void AngleMin_destroy(AngleMin* self);
CIMGUI_API AngleMax* AngleMax_AngleMax(const float v);
CIMGUI_API void AngleMax_destroy(AngleMax* self);
CIMGUI_API FloatPtr* FloatPtr_FloatPtr(const float_ptr v);
CIMGUI_API void FloatPtr_destroy(FloatPtr* self);
CIMGUI_API Dots* Dots_Dots(const int v);
CIMGUI_API void Dots_destroy(Dots* self);
CIMGUI_API MiddleDots* MiddleDots_MiddleDots(const int v);
CIMGUI_API void MiddleDots_destroy(MiddleDots* self);
CIMGUI_API MinThickness* MinThickness_MinThickness(const float v);
CIMGUI_API void MinThickness_destroy(MinThickness* self);
CIMGUI_API Reverse* Reverse_Reverse(const bool v);
CIMGUI_API void Reverse_destroy(Reverse* self);
CIMGUI_API Delta* Delta_Delta(const float v);
CIMGUI_API void Delta_destroy(Delta* self);
CIMGUI_API Mode* Mode_Mode(const int v);
CIMGUI_API void Mode_destroy(Mode* self);
CIMGUI_API bool ImSpinner::detail_SpinnerBegin(const char* label,float radius,ImVec2 *pos noname1,ImVec2 *size noname2,ImVec2 *centre noname3,int *num_segments noname4);
CIMGUI_API SpinnerConfig* SpinnerConfig_SpinnerConfig(void);
CIMGUI_API void SpinnerConfig_destroy(SpinnerConfig* self);
CIMGUI_API void SpinnerConfig_setSpinnerType(SpinnerConfig* self,const SpinnerTypeT v);
CIMGUI_API void SpinnerConfig_set_SpinnerType(SpinnerConfig* self,SpinnerType h);
CIMGUI_API void SpinnerConfig_setRadius(SpinnerConfig* self,const float v);
CIMGUI_API void SpinnerConfig_set_Radius(SpinnerConfig* self,Radius h);
CIMGUI_API void SpinnerConfig_setSpeed(SpinnerConfig* self,const float v);
CIMGUI_API void SpinnerConfig_set_Speed(SpinnerConfig* self,Speed h);
CIMGUI_API void SpinnerConfig_setThickness(SpinnerConfig* self,const float v);
CIMGUI_API void SpinnerConfig_set_Thickness(SpinnerConfig* self,Thickness h);
CIMGUI_API void SpinnerConfig_setColor(SpinnerConfig* self,const ImColor v);
CIMGUI_API void SpinnerConfig_set_Color(SpinnerConfig* self,Color h);
CIMGUI_API void SpinnerConfig_setBgColor(SpinnerConfig* self,const ImColor v);
CIMGUI_API void SpinnerConfig_set_BgColor(SpinnerConfig* self,BgColor h);
CIMGUI_API void SpinnerConfig_setAltColor(SpinnerConfig* self,const ImColor v);
CIMGUI_API void SpinnerConfig_set_AltColor(SpinnerConfig* self,AltColor h);
CIMGUI_API void SpinnerConfig_setAngle(SpinnerConfig* self,const float v);
CIMGUI_API void SpinnerConfig_set_Angle(SpinnerConfig* self,Angle h);
CIMGUI_API void SpinnerConfig_setAngleMin(SpinnerConfig* self,const float v);
CIMGUI_API void SpinnerConfig_set_AngleMin(SpinnerConfig* self,AngleMin h);
CIMGUI_API void SpinnerConfig_setAngleMax(SpinnerConfig* self,const float v);
CIMGUI_API void SpinnerConfig_set_AngleMax(SpinnerConfig* self,AngleMax h);
CIMGUI_API void SpinnerConfig_setFloatPtr(SpinnerConfig* self,const float_ptr v);
CIMGUI_API void SpinnerConfig_set_FloatPtr(SpinnerConfig* self,FloatPtr h);
CIMGUI_API void SpinnerConfig_setDots(SpinnerConfig* self,const int v);
CIMGUI_API void SpinnerConfig_set_Dots(SpinnerConfig* self,Dots h);
CIMGUI_API void SpinnerConfig_setMiddleDots(SpinnerConfig* self,const int v);
CIMGUI_API void SpinnerConfig_set_MiddleDots(SpinnerConfig* self,MiddleDots h);
CIMGUI_API void SpinnerConfig_setMinThickness(SpinnerConfig* self,const float v);
CIMGUI_API void SpinnerConfig_set_MinThickness(SpinnerConfig* self,MinThickness h);
CIMGUI_API void SpinnerConfig_setReverse(SpinnerConfig* self,const bool v);
CIMGUI_API void SpinnerConfig_set_Reverse(SpinnerConfig* self,Reverse h);
CIMGUI_API void SpinnerConfig_setDelta(SpinnerConfig* self,const float v);
CIMGUI_API void SpinnerConfig_set_Delta(SpinnerConfig* self,Delta h);
CIMGUI_API void SpinnerConfig_setMode(SpinnerConfig* self,const int v);
CIMGUI_API void SpinnerConfig_set_Mode(SpinnerConfig* self,Mode h);
CIMGUI_API void ImSpinner_color_alpha(ImColor *pOut,ImColor c,float alpha);
CIMGUI_API float ImSpinner_damped_spring(float mass,float stiffness,float damping,float time,float a,float b);
CIMGUI_API float ImSpinner_damped_gravity(float limtime);
CIMGUI_API float ImSpinner_damped_trifolium(float limtime,float a,float b);
CIMGUI_API float ImSpinner_damped_inoutelastic(float t,float amplitude,float period);
CIMGUI_API float> ImSpinner_damped_infinity(float t,float a);
CIMGUI_API float ImSpinner_ease_inquad(float time);
CIMGUI_API float ImSpinner_ease_outquad(float time);
CIMGUI_API float ImSpinner_ease_inoutquad_Float(float t);
CIMGUI_API float ImSpinner_ease_inoutquad_FloatPtr(float* p);
CIMGUI_API float ImSpinner_ease_outcubic(float t);
CIMGUI_API float ImSpinner_ease_inexpo(float t);
CIMGUI_API float ImSpinner_ease_inoutexpo_Float(float t);
CIMGUI_API float ImSpinner_ease_inoutexpo_FloatPtr(float* p);
CIMGUI_API float ImSpinner_ease_spring(float* p);
CIMGUI_API float ImSpinner_ease_gravity(float* p);
CIMGUI_API float ImSpinner_ease_infinity(float* p);
CIMGUI_API float ImSpinner_ease_inoutelastic(float* p);
CIMGUI_API float ImSpinner_ease_sine(float* p);
CIMGUI_API void ImSpinner_SpinnerRainbow(const char* label,float radius,float thickness,const ImColor color,float speed,float ang_min,float ang_max,int arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerRainbowMix(const char* label,float radius,float thickness,const ImColor color,float speed,float ang_min,float ang_max,int arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerRotatingHeart(const char* label,float radius,float thickness,const ImColor color,float speed,float ang_min);
CIMGUI_API void ImSpinner_SpinnerAng(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,float angle,int mode);
CIMGUI_API void ImSpinner_SpinnerAng8(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,float angle,int mode,float rkoef);
CIMGUI_API void ImSpinner_SpinnerAngMix(const char* label,float radius,float thickness,const ImColor color,float speed,float angle,int arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerLoadingRing(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,int segments);
CIMGUI_API void ImSpinner_SpinnerClock(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed);
CIMGUI_API void ImSpinner_SpinnerPulsar(const char* label,float radius,float thickness,const ImColor bg,float speed,bool sequence,float angle,int mode);
CIMGUI_API void ImSpinner_SpinnerDoubleFadePulsar(const char* label,float radius,float noname1,const ImColor bg,float speed);
CIMGUI_API void ImSpinner_SpinnerTwinPulsar(const char* label,float radius,float thickness,const ImColor color,float speed,int rings,int mode);
CIMGUI_API void ImSpinner_SpinnerFadePulsar(const char* label,float radius,const ImColor color,float speed,int rings,int mode);
CIMGUI_API void ImSpinner_SpinnerFadePulsarSquare(const char* label,float radius,const ImColor color,float speed,int rings,int mode);
CIMGUI_API void ImSpinner_SpinnerCircularLines(const char* label,float radius,const ImColor color,float speed,int lines,int mode);
CIMGUI_API void ImSpinner_SpinnerDots(const char* label,float* nextdot,float radius,float thickness,const ImColor color,float speed,size_t dots,float minth,int mode);
CIMGUI_API void ImSpinner_SpinnerVDots(const char* label,float radius,float thickness,const ImColor color,const ImColor bgcolor,float speed,size_t dots,size_t mdots,int mode);
CIMGUI_API void ImSpinner_SpinnerBounceDots(const char* label,float radius,float thickness,const ImColor color,float speed,size_t dots,int mode);
CIMGUI_API void ImSpinner_SpinnerZipDots(const char* label,float radius,float thickness,const ImColor color,float speed,size_t dots);
CIMGUI_API void ImSpinner_SpinnerDotsToPoints(const char* label,float radius,float thickness,float offset_k,const ImColor color,float speed,size_t dots);
CIMGUI_API void ImSpinner_SpinnerDotsToBar(const char* label,float radius,float thickness,float offset_k,const ImColor color,float speed,size_t dots);
CIMGUI_API void ImSpinner_SpinnerWaveDots(const char* label,float radius,float thickness,const ImColor color,float speed,int lt);
CIMGUI_API void ImSpinner_SpinnerFadeDots(const char* label,float radius,float thickness,const ImColor color,float speed,int lt,int mode);
CIMGUI_API void ImSpinner_SpinnerThreeDots(const char* label,float radius,float thickness,const ImColor color,float speed,int lt);
CIMGUI_API void ImSpinner_SpinnerFiveDots(const char* label,float radius,float thickness,const ImColor color,float speed,int lt);
CIMGUI_API void ImSpinner_Spinner4Caleidospcope(const char* label,float radius,float thickness,const ImColor color,float speed,int lt);
CIMGUI_API void ImSpinner_SpinnerMultiFadeDots(const char* label,float radius,float thickness,const ImColor color,float speed,int lt);
CIMGUI_API void ImSpinner_SpinnerThickToSin(const char* label,float radius,float thickness,const ImColor color,float speed,int lt,int mode);
CIMGUI_API void ImSpinner_SpinnerScaleDots(const char* label,float radius,float thickness,const ImColor color,float speed,int lt);
CIMGUI_API void ImSpinner_SpinnerSquareSpins(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerMovingDots(const char* label,float radius,float thickness,const ImColor color,float speed,size_t dots);
CIMGUI_API void ImSpinner_SpinnerRotateDots(const char* label,float radius,float thickness,const ImColor color,float speed,int dots,int mode);
CIMGUI_API void ImSpinner_SpinnerOrionDots(const char* label,float radius,float thickness,const ImColor color,float speed,int arcs);
CIMGUI_API void ImSpinner_SpinnerGalaxyDots(const char* label,float radius,float thickness,const ImColor color,float speed,int arcs);
CIMGUI_API void ImSpinner_SpinnerTwinAng(const char* label,float radius1,float radius2,float thickness,const ImColor color1,const ImColor color2,float speed,float angle,int mode);
CIMGUI_API void ImSpinner_SpinnerFilling(const char* label,float radius,float thickness,const ImColor color1,const ImColor color2,float speed);
CIMGUI_API void ImSpinner_SpinnerFillingMem(const char* label,float radius,float thickness,const ImColor color,ImColor *colorbg noname1,float speed);
CIMGUI_API void ImSpinner_SpinnerTopup(const char* label,float radius1,float radius2,const ImColor color,const ImColor fg,const ImColor bg,float speed);
CIMGUI_API void ImSpinner_SpinnerTwinAng180(const char* label,float radius1,float radius2,float thickness,const ImColor color1,const ImColor color2,float speed,float angle,int mode);
CIMGUI_API void ImSpinner_SpinnerTwinAng360(const char* label,float radius1,float radius2,float thickness,const ImColor color1,const ImColor color2,float speed1,float speed2,int mode);
CIMGUI_API void ImSpinner_SpinnerIncDots(const char* label,float radius,float thickness,const ImColor color,float speed,size_t dots);
CIMGUI_API void ImSpinner_SpinnerIncFullDots(const char* label,float radius,float thickness,const ImColor color,float speed,size_t dots);
CIMGUI_API void ImSpinner_SpinnerFadeBars(const char* label,float w,const ImColor color,float speed,size_t bars,bool scale);
CIMGUI_API void ImSpinner_SpinnerFadeTris(const char* label,float radius,const ImColor color,float speed,size_t dim,bool scale,int mode);
CIMGUI_API void ImSpinner_SpinnerBarsRotateFade(const char* label,float rmin,float rmax,float thickness,const ImColor color,float speed,size_t bars);
CIMGUI_API void ImSpinner_SpinnerBarsScaleMiddle(const char* label,float w,const ImColor color,float speed,size_t bars);
CIMGUI_API void ImSpinner_SpinnerAngTwin(const char* label,float radius1,float radius2,float thickness,const ImColor color,const ImColor bg,float speed,float angle,size_t arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerArcRotation(const char* label,float radius,float thickness,const ImColor color,float speed,size_t arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerArcFade(const char* label,float radius,float thickness,const ImColor color,float speed,size_t arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerSimpleArcFade(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerSquareStrokeFade(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerAsciiSymbolPoints(const char* label,const char* text,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerTextFading(const char* label,const char* text,float radius,float fsize,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerSevenSegments(const char* label,const char* text,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerSquareStrokeFill(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerSquareStrokeLoading(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerSquareLoading(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerFilledArcFade(const char* label,float radius,const ImColor color,float speed,size_t arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerPointsRoller(const char* label,float radius,float thickness,const ImColor color,float speed,size_t points,int circles,float rspeed);
CIMGUI_API void ImSpinner_SpinnerPointsArcBounce(const char* label,float radius,float thickness,const ImColor color,float speed,size_t points,int circles,float rspeed);
CIMGUI_API void ImSpinner_SpinnerFilledArcColor(const char* label,float radius,const ImColor color,const ImColor bg,float speed,size_t arcs);
CIMGUI_API void ImSpinner_SpinnerFilledArcRing(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,size_t arcs);
CIMGUI_API void ImSpinner_SpinnerArcWedges(const char* label,float radius,const ImColor color,float speed,size_t arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerTwinBall(const char* label,float radius1,float radius2,float thickness,float b_thickness,const ImColor ball,const ImColor bg,float speed,size_t balls,int mode);
CIMGUI_API void ImSpinner_SpinnerSolarBalls(const char* label,float radius,float thickness,const ImColor ball,const ImColor bg,float speed,size_t balls);
CIMGUI_API void ImSpinner_SpinnerSolarScaleBalls(const char* label,float radius,float thickness,const ImColor ball,float speed,size_t balls);
CIMGUI_API void ImSpinner_SpinnerSolarArcs(const char* label,float radius,float thickness,const ImColor ball,const ImColor bg,float speed,size_t balls);
CIMGUI_API void ImSpinner_SpinnerMovingArcs(const char* label,float radius,float thickness,const ImColor color,float speed,size_t arcs);
CIMGUI_API void ImSpinner_SpinnerRainbowCircle(const char* label,float radius,float thickness,const ImColor color,float speed,size_t arcs,float mode);
CIMGUI_API void ImSpinner_SpinnerBounceBall(const char* label,float radius,float thickness,const ImColor color,float speed,int dots,bool shadow);
CIMGUI_API void ImSpinner_SpinnerPulsarBall(const char* label,float radius,float thickness,const ImColor color,float speed,bool shadow,int mode);
CIMGUI_API void ImSpinner_SpinnerIncScaleDots(const char* label,float radius,float thickness,const ImColor color,float speed,size_t dots,float angle,int mode);
CIMGUI_API void ImSpinner_SpinnerSomeScaleDots(const char* label,float radius,float thickness,const ImColor color,float speed,size_t dots,int mode);
CIMGUI_API void ImSpinner_SpinnerAngTriple(const char* label,float radius1,float radius2,float radius3,float thickness,const ImColor c1,const ImColor c2,const ImColor c3,float speed,float angle);
CIMGUI_API void ImSpinner_SpinnerAngEclipse(const char* label,float radius,float thickness,const ImColor color,float speed,float angle);
CIMGUI_API void ImSpinner_SpinnerIngYang(const char* label,float radius,float thickness,bool reverse,float yang_detlta_r,const ImColor colorI,const ImColor colorY,float speed,float angle,int mode);
CIMGUI_API void ImSpinner_SpinnerGooeyBalls(const char* label,float radius,const ImColor color,float speed,int mode);
CIMGUI_API void ImSpinner_SpinnerDotsLoading(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed);
CIMGUI_API void ImSpinner_SpinnerRotateGooeyBalls(const char* label,float radius,float thickness,const ImColor color,float speed,int balls,int mode);
CIMGUI_API void ImSpinner_SpinnerHerbertBalls(const char* label,float radius,float thickness,const ImColor color,float speed,int balls);
CIMGUI_API void ImSpinner_SpinnerHerbertBalls3D(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerRotateTriangles(const char* label,float radius,float thickness,const ImColor color,float speed,int tris,int mode);
CIMGUI_API void ImSpinner_SpinnerRotateShapes(const char* label,float radius,float thickness,const ImColor color,float speed,int shapes,int pnt);
CIMGUI_API void ImSpinner_SpinnerSinSquares(const char* label,float radius,float thickness,const ImColor color,float speed,int mode);
CIMGUI_API void ImSpinner_SpinnerMoonLine(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,float angle);
CIMGUI_API void ImSpinner_SpinnerCircleDrop(const char* label,float radius,float thickness,float thickness_drop,const ImColor color,const ImColor bg,float speed,float angle);
CIMGUI_API void ImSpinner_SpinnerSurroundedIndicator(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed);
CIMGUI_API void ImSpinner_SpinnerWifiIndicator(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,float cangle,int dots);
CIMGUI_API void ImSpinner_SpinnerTrianglesSelector(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,size_t bars);
CIMGUI_API void ImSpinner_SpinnerCamera(const char* label,float radius,float thickness,LeafColor* leaf_color,float speed,size_t bars,int mode);
CIMGUI_API void ImSpinner_SpinnerFlowingGradient(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,float angle);
CIMGUI_API void ImSpinner_SpinnerRotateSegments(const char* label,float radius,float thickness,const ImColor color,float speed,size_t arcs,size_t layers,int mode);
CIMGUI_API void ImSpinner_SpinnerLemniscate(const char* label,float radius,float thickness,const ImColor color,float speed,float angle);
CIMGUI_API void ImSpinner_SpinnerRotateGear(const char* label,float radius,float thickness,const ImColor color,float speed,size_t pins);
CIMGUI_API void ImSpinner_SpinnerRotateWheel(const char* label,float radius,float thickness,const ImColor bg_color,const ImColor color,float speed,size_t pins);
CIMGUI_API void ImSpinner_SpinnerAtom(const char* label,float radius,float thickness,const ImColor color,float speed,int elipses);
CIMGUI_API void ImSpinner_SpinnerPatternRings(const char* label,float radius,float thickness,const ImColor color,float speed,int elipses);
CIMGUI_API void ImSpinner_SpinnerPatternEclipse(const char* label,float radius,float thickness,const ImColor color,float speed,int elipses,float delta_a,float delta_y);
CIMGUI_API void ImSpinner_SpinnerPatternSphere(const char* label,float radius,float thickness,const ImColor color,float speed,int elipses);
CIMGUI_API void ImSpinner_SpinnerRingSynchronous(const char* label,float radius,float thickness,const ImColor color,float speed,int elipses);
CIMGUI_API void ImSpinner_SpinnerRingWatermarks(const char* label,float radius,float thickness,const ImColor color,float speed,int elipses);
CIMGUI_API void ImSpinner_SpinnerRotatedAtom(const char* label,float radius,float thickness,const ImColor color,float speed,int elipses,int mode);
CIMGUI_API void ImSpinner_SpinnerRainbowBalls(const char* label,float radius,float thickness,const ImColor color,float speed,int balls,int mode);
CIMGUI_API void ImSpinner_SpinnerRainbowShot(const char* label,float radius,float thickness,const ImColor color,float speed,int balls);
CIMGUI_API void ImSpinner_SpinnerSpiral(const char* label,float radius,float thickness,const ImColor color,float speed,size_t arcs);
CIMGUI_API void ImSpinner_SpinnerSpiralEye(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerBarChartSine(const char* label,float radius,float thickness,const ImColor color,float speed,int bars,int mode);
CIMGUI_API void ImSpinner_SpinnerBarChartAdvSine(const char* label,float radius,float thickness,const ImColor color,float speed,int mode);
CIMGUI_API void ImSpinner_SpinnerBarChartAdvSineFade(const char* label,float radius,float thickness,const ImColor color,float speed,int mode);
CIMGUI_API void ImSpinner_SpinnerBarChartRainbow(const char* label,float radius,float thickness,const ImColor color,float speed,int bars,int mode);
CIMGUI_API void ImSpinner_SpinnerBlocks(const char* label,float radius,float thickness,const ImColor bg,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerTwinBlocks(const char* label,float radius,float thickness,const ImColor bg,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerSquareRandomDots(const char* label,float radius,float thickness,const ImColor bg,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerScaleBlocks(const char* label,float radius,float thickness,const ImColor color,float speed,int mode);
CIMGUI_API void ImSpinner_SpinnerScaleSquares(const char* label,float radius,float thikness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerSquishSquare(const char* label,float radius,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerFluid(const char* label,float radius,const ImColor color,float speed,int bars);
CIMGUI_API void ImSpinner_SpinnerFluidPoints(const char* label,float radius,float thickness,const ImColor color,float speed,size_t dots,float delta);
CIMGUI_API void ImSpinner_SpinnerArcPolarFade(const char* label,float radius,const ImColor color,float speed,size_t arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerArcPolarRadius(const char* label,float radius,const ImColor color,float speed,size_t arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerCaleidoscope(const char* label,float radius,float thickness,const ImColor color,float speed,size_t arcs,int mode);
CIMGUI_API void ImSpinner_SpinnerHboDots(const char* label,float radius,float thickness,const ImColor color,float minfade,float ryk,float speed,size_t dots,int mode);
CIMGUI_API void ImSpinner_SpinnerMoonDots(const char* label,float radius,float thickness,const ImColor first,const ImColor second,float speed);
CIMGUI_API void ImSpinner_SpinnerTwinHboDots(const char* label,float radius,float thickness,const ImColor color,float minfade,float ryk,float speed,size_t dots,float delta);
CIMGUI_API void ImSpinner_SpinnerThreeDotsStar(const char* label,float radius,float thickness,const ImColor color,float minfade,float ryk,float speed,float delta);
CIMGUI_API void ImSpinner_SpinnerSineArcs(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerTrianglesShift(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,size_t bars);
CIMGUI_API void ImSpinner_SpinnerPointsShift(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,size_t bars);
CIMGUI_API void ImSpinner_SpinnerSwingDots(const char* label,float radius,float thickness,const ImColor color,float speed);
CIMGUI_API void ImSpinner_SpinnerCircularPoints(const char* label,float radius,float thickness,const ImColor color,float speed,int lines);
CIMGUI_API void ImSpinner_SpinnerCurvedCircle(const char* label,float radius,float thickness,const ImColor color,float speed,size_t circles);
CIMGUI_API void ImSpinner_SpinnerModCircle(const char* label,float radius,float thickness,const ImColor color,float ang_min,float ang_max,float speed);
CIMGUI_API void ImSpinner_SpinnerDnaDots(const char* label,float radius,float thickness,const ImColor color,float speed,int lt,float delta,bool mode);
CIMGUI_API void ImSpinner_Spinner3SmuggleDots(const char* label,float radius,float thickness,const ImColor color,float speed,int lt,float delta,bool mode);
CIMGUI_API void ImSpinner_SpinnerRotateSegmentsPulsar(const char* label,float radius,float thickness,const ImColor color,float speed,size_t arcs,size_t layers);
CIMGUI_API void ImSpinner_SpinnerSplineAng(const char* label,float radius,float thickness,const ImColor color,const ImColor bg,float speed,float angle,int mode);
CIMGUI_API void ImSpinner_Spinner(const char* label,const detail::SpinnerConfig config);


#endif //CIMSPINNER_INCLUDED




